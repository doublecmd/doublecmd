<?xml version="1.0" encoding="UTF-8"?>
<CONFIG>
  <ProjectOptions>
    <Version Value="9"/>
    <PathDelim Value="\"/>
    <General>
      <SessionStorage Value="InProjectDir"/>
      <MainUnit Value="0"/>
      <Title Value="DSXLocate"/>
      <ResourceType Value="res"/>
    </General>
    <VersionInfo>
      <UseVersionInfo Value="True"/>
      <MinorVersionNr Value="1"/>
      <StringTable FileDescription="DSXLocate plugin for Double Commander" LegalCopyright="Copyright (C) 2006-2012  Koblov Alexander" ProductVersion=""/>
    </VersionInfo>
    <BuildModes Count="2">
      <Item1 Name="Release" Default="True"/>
      <Item2 Name="Debug">
        <CompilerOptions>
          <Version Value="11"/>
          <Target>
            <Filename Value="../dsxlocate.dsx" ApplyConventions="False"/>
          </Target>
          <SearchPaths>
            <IncludeFiles Value="$(ProjOutDir);../../../../sdk"/>
            <OtherUnitFiles Value="../../../../sdk"/>
            <UnitOutputDirectory Value="../lib"/>
          </SearchPaths>
          <Conditionals Value="if (TargetCPU &lt;> 'arm') then
begin
  CustomOptions += '-fPIC';
end;

if (TargetOS = 'darwin') then
begin
  LinkerOptions += ' -no_order_inits';
end;"/>
          <Parsing>
            <SyntaxOptions>
              <IncludeAssertionCode Value="True"/>
              <UseAnsiStrings Value="False"/>
            </SyntaxOptions>
          </Parsing>
          <CodeGeneration>
            <Checks>
              <IOChecks Value="True"/>
              <RangeChecks Value="True"/>
              <OverflowChecks Value="True"/>
              <StackChecks Value="True"/>
            </Checks>
          </CodeGeneration>
          <Linking>
            <Debugging>
              <DebugInfoType Value="dsDwarf2Set"/>
              <UseHeaptrc Value="True"/>
              <UseExternalDbgSyms Value="True"/>
            </Debugging>
            <Options>
              <PassLinkerOptions Value="True"/>
              <ExecutableType Value="Library"/>
            </Options>
          </Linking>
        </CompilerOptions>
      </Item2>
    </BuildModes>
    <PublishOptions>
      <Version Value="2"/>
      <IgnoreBinaries Value="False"/>
      <IncludeFileFilter Value="*.(pas|pp|inc|lfm|lpr|lrs|lpi|lpk|sh|xml)"/>
      <ExcludeFileFilter Value="*.(bak|ppu|ppw|o|so);*~;backup"/>
    </PublishOptions>
    <RunParams>
      <local>
        <FormatVersion Value="1"/>
        <LaunchingApplication PathPlusParams="\usr\X11R6\bin\xterm -T 'Lazarus Run Output' -e $(LazarusDir)\tools\runwait.sh $(TargetCmdLine)"/>
      </local>
    </RunParams>
    <Units Count="2">
      <Unit0>
        <Filename Value="DSXLocate.lpr"/>
        <IsPartOfProject Value="True"/>
      </Unit0>
      <Unit1>
        <Filename Value="un_process.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit1>
    </Units>
  </ProjectOptions>
  <CompilerOptions>
    <Version Value="11"/>
    <Target>
      <Filename Value="../dsxlocate.dsx" ApplyConventions="False"/>
    </Target>
    <SearchPaths>
      <IncludeFiles Value="$(ProjOutDir);../../../../sdk"/>
      <OtherUnitFiles Value="../../../../sdk"/>
      <UnitOutputDirectory Value="../lib"/>
    </SearchPaths>
    <Conditionals Value="if (TargetCPU &lt;> 'arm') then
begin
  CustomOptions += '-fPIC';
end;

if (TargetOS = 'darwin') then
begin
  LinkerOptions += ' -no_order_inits';
end;

if (TargetOS = 'linux') then
begin
  LinkerOptions += ' -z relro --as-needed';
end;"/>
    <Parsing>
      <SyntaxOptions>
        <UseAnsiStrings Value="False"/>
      </SyntaxOptions>
    </Parsing>
    <CodeGeneration>
      <SmartLinkUnit Value="True"/>
      <Optimizations>
        <OptimizationLevel Value="3"/>
      </Optimizations>
    </CodeGeneration>
    <Linking>
      <Debugging>
        <GenerateDebugInfo Value="False"/>
      </Debugging>
      <LinkSmart Value="True"/>
      <Options>
        <PassLinkerOptions Value="True"/>
        <ExecutableType Value="Library"/>
      </Options>
    </Linking>
  </CompilerOptions>
</CONFIG>
